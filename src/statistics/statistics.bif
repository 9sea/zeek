
%%{
#include "zeek/statistics/Plugin.h"
%%}

function Statistics::get_and_reset_event_name_statistics%(%): EventNameStats
	%{
	auto rval = zeek::make_intrusive<zeek::VectorVal>(zeek::id::find_type<VectorType>("EventNameStats"));
    auto stats = zeek::plugin::statistics::plugin.GetAndResetEventStatistics();
    const auto& recordType = zeek::id::find_type<RecordType>("EventNameCounter");

    auto i = 0;
	for (auto& eventCounter : stats)
        {
        auto eventStatRecord = zeek::make_intrusive<zeek::RecordVal>(recordType);
        eventStatRecord->Assign(0, zeek::make_intrusive<zeek::StringVal>(eventCounter.first));
        eventStatRecord->Assign(1, zeek::val_mgr->Count(eventCounter.second));
        rval->Assign(i, std::move(eventStatRecord));
		++i;
        }

    return rval;
    %}

function Statistics::start_event_name_statistics_monitor%(%): any
    %{
    zeek::plugin::statistics::plugin.StartEventNamesStatisticsMonitor();
    return nullptr;
    %}